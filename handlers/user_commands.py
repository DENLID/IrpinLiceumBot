from aiogram.filters import Command, CommandStart, CommandObject
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram import Router, Bot, F
from pytz import timezone
from datetime import datetime
from pymongo import MongoClient
import json

from utils.states import Communication
from filters.filters import IsAdminChat, IsWadMessage, IsMsAdmin
import keyboerds.keyboards as keyboards
import config


router = Router()

cluster = MongoClient(config.mongo_api)
users = cluster.ILdb.users
ban_list = cluster.ILdb.ban_list


@router.message(CommandStart())
async def start(message: Message) -> None:
    print(message.chat.id)
    await message.answer(text="""
–ü—Ä–∏–≤—ñ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç
—ñ—Ä–ø—ñ–Ω—Å—å–∫–æ–≥–æ –ª—ñ—Ü–µ—é ‚Ññ2!
–©–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –º–µ–Ω—é
–Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∑–Ω–∏–∑—É üëá
""", reply_markup = keyboards.start_kb)


@router.message(Command('menu'))
async def menu(message: Message):
    await send_menu(message, "command")

async def send_menu(message, ftype):
    text = """
<b>–ú–µ–Ω—é</b>
"""
    if ftype == "call":
        await message.message.edit_text(text=text, reply_markup=keyboards.menu_kb)
    elif ftype == "command":
        await message.answer(text=text, reply_markup=keyboards.menu_kb)

@router.message(Command('help'))
async def help(message: Message):
    await help_message(message, "command")

async def help_message(message, ftype):
    if ftype == "command":
        await message.answer("""
–í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —è–∫–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å
""", reply_markup = keyboards.help_kb_command)
    elif ftype == "call":
        await message.message.edit_text("""
–í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —è–∫–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å
""", reply_markup = keyboards.help_kb_menu)
    
    
@router.message(Command('ms'), IsMsAdmin())
async def ms(message: Message):
    await message.answer("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Form, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Ñ–æ—Ä–º—É –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö —É—á–Ω—ñ–≤ –≤ –≤–∞—à–æ–º—É –∫–ª–∞—Å—ñ.", 
reply_markup=keyboards.ms_kb)

@router.message(Command('ms_xlsx'))
async def ms_xlsx(message: Message):
    await message.answer_document(document=FSInputFile(config.path_ms), caption="–°–ø–∏—Å–æ–∫ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö —É—á–Ω—ñ–≤ –≤ —à–∫–æ–ª—ñ")
    
@router.message(Command('news',), IsAdminChat())
async def news(message: Message, state: FSMContext, bot: Bot, command: CommandObject):
    text = command.args
    for u in users.find({}):
        try:
            await bot.send_message(chat_id=u["_id"], text=text)
        except:
            pass

@router.message(Command('ban'), IsAdminChat())
async def ban(message: Message, command: CommandObject):
    args = command.args.split()
    chat_id = int(args[0])

    user_exist = users.find_one({"_id": chat_id})
    if user_exist != None:
        username = user_exist["username"]
        ban_list.insert_one({
            "_id": id,
            "username": username
        })
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ ID: <code>{chat_id}</code> —É—Å–ø—ñ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω–∏–π ‚úÖ")
    else:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID: <code>{chat_id}</code> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π ‚ùå")
        
@router.message(Command('unban'), IsAdminChat())
async def ban(message: Message, command: CommandObject):
    args = command.args.split()
    chat_id = int(args[0])

    user_exist = users.find_one({"_id": chat_id})
    if user_exist != None:
        username = user_exist["username"]
        ban_list.delete_one({
            "_id": chat_id,
            "username": username
        })
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ ID: <code>{chat_id}</code> —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–±–∞–Ω–µ–Ω–∏–π ‚úÖ")
    else:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID: <code>{chat_id}</code> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π ‚ùå")

@router.message(Command('uchcom'), IsAdminChat())
async def uchcom(message: Message, bot: Bot):
    
    await bot.send_message(chat_id=None)

@router.message(Command('add_tag'), IsAdminChat())
async def add_tag(message: Message, command: CommandObject):
    args = command.args.split()
    chat_id = int(args[0])
    tag = args[1]

    if users.find_one({"_id": chat_id}) != None:
        users.update_one({"_id": chat_id}, {"$push": {"tags": tag}})
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ ID: <code>{chat_id}</code> —É—Å–ø—ñ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π —Ç–µ–≥ <code>{tag}</code> ‚úÖ")
    else:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID: <code>{chat_id}</code> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π ‚ùå")

@router.message(Command('delete_tag'), IsAdminChat())
async def delete_tag(message: Message, command: CommandObject):
    args = command.args.split()
    chat_id = int(args[0])
    tag = args[1]

    if users.find_one({"_id": chat_id}) != None:
        users.update_one({"_id": chat_id}, {"$pull": {"tags": tag}})
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ ID: <code>{chat_id}</code> —É—Å–ø—ñ—à–Ω–æ –∑–∞–±—Ä–Ω–æ —Ç–µ–≥ <code>{tag}</code> ‚úÖ")
    else:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID: <code>{chat_id}</code> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π ‚ùå")

@router.message(Command('get_info'), IsAdminChat())
async def delete_tag(message: Message, command: CommandObject):
    args = command.args.split()
    chat_id = int(args[0])

    data = users.find_one({"_id": chat_id})

    if data != None:
        await message.answer(f"""
–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:
ID: {data["_id"]}
username: {data["username"]}
airalert: {data["airalert"]}
tags: {data["tags"]}
""")
    else:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID: <code>{chat_id}</code> –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π ‚ùå")

@router.message(IsAdminChat())
async def handle_text(message: Message, bot: Bot):
    try:
        text = message.reply_to_message.text
        start_index = text.find("ID: ") + len("ID: ")
        end_index = text.find(" | USERNAME:")
        id = text[start_index:end_index]
        await bot.copy_message(id, config.admin_group, message.message_id)
    except:
        print("Just reply message in admin chat...")

@router.message(Command('getmyid'))
async def getmyid(message: Message):
    await message.answer(f"""
–í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∞–π–¥—ñ: <code>{message.from_user.id}</code>
–í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º —á–∞—Ç –∞–π–¥—ñ: <code>{message.chat.id}</code>""")  


@router.message(IsWadMessage(), IsMsAdmin())
async def wad_handler(message: Message):
    webdata = message.web_app_data.data
    data = json.loads(webdata)
    if [f'{data["class_number"]}-{data["class_letter"]}'] in users.find_one({"_id": int(message.chat.id)})["tags"]:
        await message.answer(f"""
–ö–ª–∞—Å: {data["class_number"]} - {data["class_letter"]}
–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–Ω—ñ–≤ –≤ –∫–ª–∞—Å—ñ: {data["students_number"]}
–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–∏—Å—É—Ç–Ω—ñ—Ö –≤ –∫–ª–∞—Å—ñ: {int(data["students_number"])-int(data["ms_number"])}
–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö –≤ –∫–ª–∞—Å—ñ: {data["ms_number"]}
–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–æ—Ä–∏—Ö —ñ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö: {data["ms_number_hv"]}
–í—ñ–¥—Å—É—Ç–Ω—ñ: {data["ms"]}
""", reply_markup=keyboards.ms_tf_func(data["class_letter"], int(data["class_number"]), data["students_number"], int(data["students_number"])-int(data["ms_number"]), data["ms_number_hv"], data["ms"]))
    else:
        await message.answer(f'–í–∏–±–∞—á—Ç–µ –∞–ª–µ –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö –≤ –∫–ª–∞—Å—ñ {data["class_number"]} - {data["class_letter"]}', reply_markup=keyboards.comm_kb)

@router.message(Communication.mess)
async def handle_text(message: Message, bot: Bot):
    if ban_list.find_one({"_id": message.chat.id}) == None:
        text = f"""
{message.text}
{message.caption}

ID: <code>{message.chat.id}</code> | USERNAME: @{message.from_user.username} |
""".replace("""None\nNone\n""", "").replace("None\n", "")
#.replace("""
#None
#None

#""", "").replace("None", "")
        
        if message.content_type == "text":
            await bot.send_message(chat_id=config.admin_group, text=text)
        if message.content_type == "photo":
            await bot.send_photo(chat_id=config.admin_group, photo=message.photo[-1].file_id, caption=text)
        if message.content_type == "video":
            await bot.send_video(chat_id=config.admin_group, video=message.video.file_id, caption=text)
        if message.content_type == "document":
            await bot.send_document(chat_id=config.admin_group, document=message.document.file_id, caption=text)
    else:
        await message.answer("""
–í–∏ –æ—Ç—Ä–∏–≤–∞–ª–∏ –±–∞–Ω, —Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ 
–Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
""")
