from aiogram.types.web_app_info import WebAppInfo
from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton
)

from aiogram.filters.callback_data import CallbackData


def check_mark(str, data):
    if str == data:
        return "‚úÖ"
    else:
        return ""


back_menu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="menu")]])
back_help = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="help")]])

back_menu_button = [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="menu")]

start_kb = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text = '–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –º–µ–Ω—é',
            callback_data='menu'
        )
    ]
])

menu_kb = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="üí¨ –ó–≤'—è–∑–æ–∫ –∑ –∞–¥–º—ñ–Ω–∞–º–∏ üí¨", 
            callback_data="comm"
        )
    ],
    [
        InlineKeyboardButton(
            text="üö® –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏ üö®", 
            callback_data="airalert"
        )
    ],
    [
        InlineKeyboardButton(
            text="üõ† –î–æ–ø–æ–º–æ–≥–∞ üõ†", 
            callback_data="help"
        )
    ]
])

comm_kb = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–Ø –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ",
            callback_data="comm_help"
        )
    ],
    back_menu_button
])

help_kb_command = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text='–í—Å—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞', callback_data="help_command")
    ],
    [
        InlineKeyboardButton(text='–ß–æ–º—É –Ω–∞ –º–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω—ñ—á–æ–≥–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏?', callback_data="help_zvazok")
    ]
])

help_kb_menu = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text='–í—Å—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞', callback_data="help_command")
    ],
    [
        InlineKeyboardButton(text='–ú–µ–Ω—ñ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å –∞–¥–º—ñ–Ω–∏', callback_data="help_zvazok")
    ],
    back_menu_button
])

ms_kb = ReplyKeyboardMarkup(keyboard=[
    [
        KeyboardButton(text="Form", web_app=WebAppInfo(url="https://denlid.github.io/IrpinLiceumBotWEBCITE/"))
    ]
])

def airalert_kb_func(data):
    airalert_kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f"–ù—ñ–∫–æ–ª–∏ {check_mark('never', data)}", callback_data="airalert_never")
        ],
        [
            InlineKeyboardButton(text=f"–í —à–∫—ñ–ª—å–Ω–∏–π —á–∞—Å {check_mark('st', data)}", callback_data="airalert_st")
        ],
        [
            InlineKeyboardButton(text=f"–ó–∞–≤–∂–¥–∏ {check_mark('always', data)}", callback_data="airalert_always")
        ],
        back_menu_button
    ])
    return airalert_kb


class MsCallback(CallbackData, prefix="ms"):
    action: str
    class_letter: str
    class_number: int
    class_student: int
    present_students: int
    ms_number_hv: int
    ms_students: str



def ms_confirm_kb(class_letter, class_number, class_student, present_students, ms_number_hv, ms_students):
    ms_tf_kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–¢–∞–∫, –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ', callback_data=MsCallback(action="ms_accept",
                                                                                        class_letter=class_letter, class_number=class_number,
                                                                                        class_student=class_student, present_students=present_students,
                                                                                        ms_number_hv=ms_number_hv, ms_students=ms_students).pack())
        ],
        [
            InlineKeyboardButton(text='–ù—ñ, –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå', callback_data="ms_decline")
        ]
    ])
    return ms_tf_kb

to_comm_kb = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="üí¨ –ó–≤'—è–∑–æ–∫ –∑ –∞–¥–º—ñ–Ω–∞–º–∏ üí¨", 
            callback_data="comm"
        )
    ],
])